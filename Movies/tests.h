#pragma once

void test_all();
void test__dynamic_vector();
void test__dynamic_vector_constructor__valid_capacity__dynamic_vector_created();
void test__get_length__valid_dynamic_vector__valid_length();
void test__add_element__valid_element__element_at_the_end_position();
void test__delete_element__element_in_dynamic_vector__element_not_it_dynamic_vector();
void test__update_element__movie_with_diferent_genre__movie_modified_in_dynamic_vector();
void test__resize__dynamic_vector__dynamic_vector_with_capacity_doubled();
void test__dynamic_vector_copy_constructor__valid_dynamic_vector__dynamic_vector_copy_created();
void test__Movie();
void test__get_title__valid_movie__valid_title();
void test__get_year_of_release__valid_movie__valid_year_of_release();
void test__get_number_of_likes__valid_movie__valid_number_of_likes();
void test__get_trailer__valid_movie__valid_trailer();
void test__set_title__valid_movie__valid_title();
void test__set_year_of_release__valid_movie__valid_year_of_release();
void test__set_number_of_likes__valid_movie__valid_number_of_likes();
void test__set_trailer__valid_movie__valid_trailer();
void test__set_genre__valid_movie__valid_genre();
void test__print_format__valid_movie__valid_printing_format();
void test__operator_extraction__valid_ifstream__movie_read();
void test__operator_insert__valid_ifstream__movie_read();
void test__Repository();
void test__get_length__valid_repository__valid_length();
void test__add_entity__valid_entity__entity_at_the_end_position();
void test__delete_entity__entity_in_Repository__entity_not_it_Repository();
void test__update_entity__movie_with_diferent_genre__movie_modified_in_Repository();
void test__get_by_name__valid_name__movie_with_that_name();
void test__Service();
void test__service_add_entity__valid_entity__entity_at_the_end_position();
void test__service_delete_entity__entity_in_Service__entity_not_it_Service();
void test__service_update_entity__movie_with_diferent_genre__movie_modified_in_Service();
void test__service_add_to_watchlist__valid_movie__movie_at_the_end_of_watchlist();
void test__service_get_first_movie_for_printing__valid_service__first_movie_from_repository();
void test__service_get_next_movie_for_printing__current_position_smaller_than_number_of_movies__next_movie_from_repository();
void test__service_get_next_movie_for_printing__current_position_equal_to_number_of_movies__next_movie_from_repository();
void test__get_filtered_movies__valid_genre_and_number_of_likes__a_vector_of_filtered_movies();
void test__initialize_repository__filename__repository_initialized();
void test__File_repository();
void test__File_repository__get_length__valid_repository__valid_length();
void test__File_repository__delete_entity__valid_movie_key__movie_deleted();
void test__File_repository__update_entity__valid_movie_key__movie_deleted();
void test__File_repository__get_by_name__valid_name__movie_with_that_name();
